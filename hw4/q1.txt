1) Использование тестовых заглушек может быть полезным при написании модульных тестов по нескольким причинам:

   - Заглушки позволяют изолировать тестируемый код от его зависимостей. Это делает тестирование более предсказуемым и управляемым.
   - При использовании заглушек можно сосредоточиться на тестировании конкретного модуля или компонента, не затрагивая его зависимости.
   - Заглушки позволяют создавать сценарии, которые могут быть трудно воссоздать в реальной среде.

2) Для проверки того, что метод был вызван с определенными аргументами, следует использовать заглушки типа "Mock" или "Stub". Моки обычно предоставляют более широкие возможности для проверки вызовов методов с определенными аргументами и их последовательности.

3) Если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода без проверки входных аргументов, следует использовать заглушки типа "Stub". Они предоставляют фиксированные значения, которые возвращаются при вызове методов.

4) Для имитации взаимодействия с внешним API или базой данных следует использовать заглушки типа "Mock" или "Stub", которые способны имитировать поведение этих внешних компонентов. Обычно это делается путем предоставления фиксированных ответов на запросы, которые могли бы быть получены из реального API или базы данных. В некоторых случаях можно использовать также фреймворки для создания фейковых серверов или баз данных.